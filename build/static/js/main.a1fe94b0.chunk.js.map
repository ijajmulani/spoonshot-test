{"version":3,"sources":["common/config.js","communications/tmdb_communication.js","common/base_data_service.js","components/HeroSearch/HeroSearch.js","components/GenreList/GenreList.js","components/ListItem/ListItem.js","components/Loader/Loader.js","components/Lists/Lists.js","components/Home/Home.js","components/Header/Header.js","common/utility.js","components/Cast/Cast.js","components/Keywords/Keywords.js","components/Media/Media.js","components/Overview/Overview.js","components/Recommendations/Recommendations.js","components/MovieDetails/MovieDetails.js","components/App/App.js","index.js"],"names":["AppConfig","TMDBCommunication","getGenres","Promise","resolve","reject","getData","err","res","getListByGenre","genre_id","page","sort_by","include_adult","include_video","with_genres","searchMovie","query","getMovieDetails","movieId","getCredits","getKeywords","getRecommendations","methodName","data","onError","onSuccess","appConfig","params","URLSearchParams","api_key","language","responsePromise","fetch","onResponseReceipt","then","response","json","responseJson","catch","exception","error","HeroSearch","props","handleChange","e","setState","searchQuery","target","value","handleSubmit","preventDefault","state","onSearchEvent","this","isEnable","className","onSubmit","xmlns","viewBox","fill","width","height","d","type","onChange","placeholder","onClick","classNames","React","Component","GenreList","onGenreClick","genreId","selectedGenreID","onGenreSelected","tmdbCommunication","genres","id","map","genre","key","name","ListItem","src","title","release_date","poster_path","onMovieClick","href","loading","alt","Loader","Lists","getList","searchKey","onLoadMoreClick","results","prevState","Fragment","item","total_pages","Home","onMovieClickEvent","listsKey","Header","convertRatingToPercentage","n","formatCurrency","x","toString","replace","Cast","credits","cast","slice","actor","profile_path","character","Keywords","keywords","length","keyword","Media","details","Overview","overview","status","original_language","budget","revenue","Recommendations","recommendations","recommendation","vote_average","MovieDetails","console","log","reduce","acc","duration","hours","rhours","Math","floor","minutes","round","timeConvert","runtime","toUpperCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1fe94b0.chunk.js","sourcesContent":["export const AppConfig = {\n  BaseAPI: '//api.themoviedb.org',\n  APIKey: '00f063d712eb09a3c05e773860a2b987',\n  Poster185BaseURL: `//image.tmdb.org/t/p/w185`,\n  Poster342BaseURL: `//image.tmdb.org/t/p/w342`,\n  Poster500BaseURL: `//image.tmdb.org/t/p/w3500`,\n  Poster780BaseURL: `//image.tmdb.org/t/p/w780`,\n  PosterOriginalBaseURL: `//image.tmdb.org/t/p/original`,\n}","import BaseDataService from '../common/base_data_service';\n\nexport default class TMDBCommunication extends BaseDataService {\n  getGenres = () => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/genre/movie/list`,\n        {},\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n\n  getListByGenre = (genre_id, page = 1) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/discover/movie`,\n        {\n          sort_by: 'popularity.desc',\n          include_adult: false,\n          include_video: false,\n          page,\n          with_genres: genre_id\n        },\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n\n  searchMovie = (query, page = 1) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/search/movie`,\n        {\n          query,\n          page,\n          include_adult: false,\n        },\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n\n  getMovieDetails = (movieId) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/movie/${movieId}`,\n        {},\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n\n  getCredits = (movieId) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/movie/${movieId}/credits`,\n        {},\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n\n  getKeywords = (movieId) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/movie/${movieId}/keywords`,\n        {},\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n\n  getRecommendations = (movieId) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/3/movie/${movieId}/recommendations`,\n        {},\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n  \n}\n","import { AppConfig } from \"./config\";\r\n\r\nexport default class BaseDataService {\r\n\r\n  getData = (methodName, data = {}, onError, onSuccess) => {\r\n    const appConfig = AppConfig.BaseAPI;\r\n    const params = new URLSearchParams({...data, \r\n      api_key: AppConfig.APIKey,\r\n      language: 'en-US',\r\n    });\r\n     \r\n    const responsePromise = fetch(`${appConfig}${methodName}?${params}`)\r\n    this.onResponseReceipt(responsePromise, onError, onSuccess);\r\n  }\r\n\r\n  onResponseReceipt = (responsePromise, onError, onSuccess) => {\r\n    responsePromise.then(response => {\r\n      return response.json()\r\n    }).then(responseJson => {\r\n      onSuccess(responseJson);\r\n    }).catch(exception => {\r\n      onError({ error: exception });\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport './HeroSearch.css'\nimport classNames from 'classnames';\n\n\nexport default class HeroSearch extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      searchQuery: '',\n    }\n  }\n  \n  handleChange = (e) => {\n    this.setState({searchQuery: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.searchQuery) {\n      this.props.onSearchEvent(this.state.searchQuery);\n    }\n  }\n\n  render() {\n    const { searchQuery } = this.state;\n    const isEnable = searchQuery !== '';\n    return (\n      <div className=\"hero-search-wrapper\">\n          <h2 className=\"search-title\">Find perfect movie for <b>evening</b></h2>\n          <form onSubmit={this.handleSubmit } className=\"search-form\">\n            <svg className=\"search-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/></svg>\n            <input  type=\"search\" value={searchQuery} onChange={this.handleChange} className=\"search-input-field\" placeholder=\"Search movies\" /> \n            <button type=\"submit\" onClick={this.handleSubmit} className={classNames('search-btn', isEnable ? '' : 'disable') }>SEARCH</button>\n          </form>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport './GenreList.css'\n\nexport default class GenreList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      genres: [],\n      selectedGenreID: props.selectedGenreID || -1,\n    };\n  }\n\n  componentDidMount() {\n    this.tmdbCommunication.getGenres().then(res => {\n      if (res.genres) {\n        this.setState({\n          genres: res.genres,\n          selectedGenreID: res.genres[0].id,\n        }, () => {\n          if (this.props.onGenreSelected) {\n            this.props.onGenreSelected(res.genres[0].id);\n          }\n        })\n      }\n    })\n  }\n\n  onGenreClick = (e, genreId) => {\n    this.setState({\n      selectedGenreID: genreId\n    }, () => {\n      if (this.props.onGenreSelected) {\n        this.props.onGenreSelected(genreId);\n      }\n    });\n  }\n\n  render() {\n    const { genres, selectedGenreID } = this.state;\n    return (\n      <div className=\"category-list-wrapper\">\n        <h2 className=\"browse-category-text\">Browse movies by category</h2>\n        <ul className=\"category-list\">\n          {genres.map((genre) => (\n            <li onClick={(e) => this.onGenreClick(e, genre.id)} key={genre.id} className={selectedGenreID === genre.id ? 'selected' : null}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { AppConfig } from '../../common/config';\nimport './ListItem.css';\n\n\nexport default class ListItem extends React.Component {\n  onError = (e) => {\n    e.target.src = \"//www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\";\n  }\n\n  render() {\n    const {title, release_date, poster_path, id} = this.props.data;\n    return (\n      <a onClick={(e) => this.props.onMovieClick(e, id)} href={`/${id}`} className=\"card\">\n        <div className=\"thumb\">\n          <img className=\"poster\" loading=\"lazy\" onError={this.onError} src={`${AppConfig.Poster342BaseURL}${poster_path}`} alt={title} />\n        </div>\n        <div className=\"detail-box\">\n          <span className=\"title\">{title}</span> \n          <span className=\"release-date\">{release_date}</span> \n        </div>\n      </a>\n    );\n  }\n}","import React from 'react';\nimport './Loader.css';\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div className=\"loader\" id=\"loader\"></div>\n    );\n  }\n}","import React from 'react';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport ListItem from '../ListItem/ListItem';\nimport Loader from '../Loader/Loader';\nimport './Lists.css';\n\n\nexport default class Lists extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      data: {},\n      page: 1,\n      loading: props.loading,\n      searchKey: props.searchKey\n    }\n  }\n\n  componentDidMount() {\n    this.getList(this.state.page).then(res => {\n      if (res && res.results) {\n        this.setState({\n          data: res,\n          loading: false,\n        });\n      }\n    })\n  }\n\n\n  getList = (page) => {\n    this.setState({\n      loading: true\n    });\n    if (this.state.searchKey) {\n      return this.tmdbCommunication.searchMovie(this.state.searchKey, page);\n    } else {\n      return this.tmdbCommunication.getListByGenre(this.props.genreId, page);\n    }\n  }\n  \n  onLoadMoreClick = () => {\n    this.getList(this.state.page + 1).then(res => {\n      if (res && res.results) {\n        this.setState(prevState => ({\n          data: {                   \n            ...prevState.data,   \n            results: [...prevState.data.results, ...res.results]  \n          },\n          page: prevState.page + 1,\n          loading: false,\n        }))\n      }\n    })\n  }\n\n  onMovieClick = (e, movieId) => {\n    if (this.props.onMovieClick) {\n      this.props.onMovieClick(e, movieId);\n    }\n  }\n\n  render() {\n    const {data, page, loading} = this.state;\n    return (\n      <React.Fragment>\n        {data && data.results ? (\n          <div>\n            <div className='card-container'>\n              {data.results.map((item) => (\n                <ListItem key={item.id} data={item} onMovieClick={this.onMovieClick} />\n              ))}\n            </div>\n            {(data.total_pages === 0 || data.total_pages === page || loading) ? null : <button className=\"load-more-btn\" onClick={this.onLoadMoreClick}>Load More</button>}\n          </div>\n        )  : null}\n        {loading ? <Loader /> : null}\n      </React.Fragment>\n    );\n  }\n}","import React from 'react';\nimport './Home.css';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport HeroSearch from '../HeroSearch/HeroSearch';\nimport GenreList from '../GenreList/GenreList';\nimport Lists from '../Lists/Lists';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      genreId: -1,\n      searchKey: '',\n    };\n  }\n\n  componentDidMount() {\n    \n  }\n\n  onGenreSelected = (genreId) => {\n    this.setState({\n      genreId,\n    })\n  }\n\n  onSearchEvent = (searchKey) => {\n    this.setState({\n      searchKey: searchKey,\n    })\n  }\n\n  onMovieClickEvent = (e, movieId) => {\n    if (this.props.onMovieClickEvent) {\n      this.props.onMovieClickEvent(e, movieId)\n    }\n  }\n\n  render() {\n    const { genreId, searchKey } = this.state;\n    const listsKey = searchKey || genreId;\n    return (\n      <React.Fragment>\n        <HeroSearch onSearchEvent={this.onSearchEvent} />\n        {searchKey ? \n          <div className=\"search-text\">Showing results for <b> ‘{searchKey}’</b></div> \n          : \n          <GenreList onGenreSelected={this.onGenreSelected} />\n        }\n        {(genreId && genreId > -1) ? (<Lists \n          loading={true} \n          key={listsKey} \n          searchKey={searchKey} \n          genreId={genreId}  \n          onMovieClick={this.onMovieClickEvent}\n          />)  : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport './Header.css'\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header-section\">\n        <a className=\"logo\" href=\"/\">Cinibuzz</a>\n        <nav className=\"header-nav-links\">\n          <a className=\"header-links\" >Movie</a>\n          <a className=\"header-links\">TV Shows</a>\n          <a className=\"header-links\" >Kids</a>\n        </nav>\n      </header>\n    );\n  }\n}","export function timeConvert(n) {\n  if (!n) {\n    return ''\n  }\n  const num = n;\n  const hours = (num / 60);\n  const rhours = Math.floor(hours);\n  const minutes = (hours - rhours) * 60;\n  const rminutes = Math.round(minutes);\n  return rhours + 'h ' + rminutes + 'm';\n}\n\nexport function convertRatingToPercentage(n) {\n  if (!n) {\n    return ''\n  }\n  return (n * 10) + '%';\n}\n\nexport function getLanguageFromCode(code) {\n  if (code === 'en') {\n    return \"English\"\n  }\n  return \"\"\n}\n\nexport function formatCurrency(x) {\n  if (!x) {\n    return '$0.00';\n  } \n  return '$' + x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + '.00';\n}","import React from 'react';\nimport { AppConfig } from '../../common/config';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport './Cast.css';\n\nexport default class Cast extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      credits: {},\n    }\n  }\n\n  componentDidMount() {\n    this.tmdbCommunication.getCredits(this.props.movieId).then(res => {\n      this.setState({\n        credits: res,\n      })\n    });\n  }\n\n  onError = (e) => {\n    e.target.src = \"//www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\";\n  }\n\n  render() {\n    const { cast } = this.state.credits;\n\n    return (\n      cast ? (\n        <div className=\"cast-wrapper\">\n          <div className=\"cast-heading-wrapper\">\n            <h2 className=\"cast-heading\">Cast</h2>\n            <div className=\"navigation-icons\">\n              <svg className=\"left-nav\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/></svg>\n              <svg className=\"right-nav active\" xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/></svg>\n            </div>\n          </div>\n          <div className=\"actors\">\n            {cast.slice(0, 4).map((actor) => (\n              <div className=\"actor-card\" key={actor.id}>\n                <img onError={this.onError} className=\"actor-image\" src={`${AppConfig.Poster342BaseURL}${actor.profile_path}`} alt={actor.name} />\n                <span className=\"actor-name\" >{actor.name}</span> \n                <span className=\"actor-charactor\">{actor.character}</span> \n              </div>\n            ))}\n          </div>\n\n        </div>\n      ) : null\n    ) \n  }\n}","import React from 'react';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport './Keywords.css';\n\nexport default class Keywords extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      keywords: [],\n    }\n  }\n\n  componentDidMount() {\n    this.tmdbCommunication.getKeywords(this.props.movieId).then(res => {\n      this.setState({\n        keywords: res.keywords,\n      })\n    });\n  }\n\n  render() {\n    const { keywords } = this.state;\n\n    return (\n      <div className=\"keywords-wrapper\">\n        <h2 className=\"keywords-heading\">Keywords</h2>\n          {keywords.length ? (\n            <ul>\n              {keywords.map((keyword) => (\n                <li key={keyword.id} ><a className=\"keyword\" href={`/keyword/${keyword.id}`}>{keyword.name}</a></li>\n              ))}\n            </ul>\n          ) : <div>No keywords found</div>}\n      </div>\n    ) \n  }\n}","import React from 'react';\nimport { AppConfig } from '../../common/config';\nimport './Media.css';\n\nexport default class Media extends React.Component {\n  onError = (e) => {\n    e.target.src = \"//www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\";\n  }\n\n  render() {\n    return (\n      <div className=\"media-wrapper\">\n        <h3 className=\"media-heading\">Media</h3>\n        <ul className=\"media-panel-wrapper\">\n          <li className=\"media-panel active\"><a href=\"#\">Most Popular</a></li>\n          <li className=\"media-panel\"><a href=\"#\">Videos</a></li>\n          <li className=\"media-panel\"><a href=\"#\">Backdrops</a></li>\n          <li className=\"media-panel\"><a href=\"#\">Poster</a></li>\n        </ul>\n        <img onError={this.onError} className=\"media-image\" src={`${AppConfig.Poster780BaseURL}${this.props.details.poster_path}`} alt={this.props.details.title} />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { formatCurrency, getLanguageFromCode } from '../../common/utility';\nimport './Overview.css';\n\nexport default class Overview extends React.Component {\n  render() {\n    const {details} = this.props;\n    return (\n      <div className=\"overview-wrapper\">\n        <div className=\"left\">\n          <div className=\"overview-text\">Overview</div>\n          <div className=\"description\">{details.overview}</div>\n          <div className=\"director-details-wrapper\">\n          <div className=\"director-wrapper\">\n              <div className=\"heading\">Anthony Russo</div>\n              <div className=\"value\">Director</div>\n            </div>\n            <div className=\"director-wrapper\">\n              <div className=\"heading\">Joe Russo</div>\n              <div className=\"value\">Director</div>\n            </div>\n            <div className=\"director-wrapper\">\n              <div className=\"heading\">Stephen McFeely</div>\n              <div className=\"value\">Screenplay</div>\n            </div>\n            <div className=\"director-wrapper\">\n              <div className=\"heading\">Christopher Markus</div>\n              <div className=\"value\">Screenplay</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"heading\">Status</div>\n          <div className=\"value\">{details.status}</div>\n          <div className=\"heading\">Original Language</div>\n          <div className=\"value\">{getLanguageFromCode(details.original_language)}</div>\n          <div className=\"heading\">Budget</div>\n          <div className=\"value\">{formatCurrency(details.budget)}</div>\n          <div className=\"heading\">Revenue</div>\n          <div className=\"value\">{formatCurrency(details.revenue)}</div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { AppConfig } from '../../common/config';\nimport { convertRatingToPercentage } from '../../common/utility';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport './Recommendations.css';\n\nexport default class Recommendations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      recommendations: [],\n    }\n  }\n\n  componentDidMount() {\n    this.tmdbCommunication.getRecommendations(this.props.movieId).then(res => {\n      this.setState({\n        recommendations: res.results,\n      })\n    });\n  }\n\n  render() {\n    const { recommendations } = this.state;\n\n    return (\n      recommendations ? (\n        <div className=\"recommendations-wrapper\">\n          <h2 className=\"recommendations-heading\">Recommendations</h2>\n            <ul>\n              {recommendations.slice(0, 3).map((recommendation) => (\n                <li className=\"recommendation-card\" key={recommendation.id}>\n                  <a  href={`/recommendations/${recommendation.id}`}>\n                    <img className=\"recommendation-img\" src={`${AppConfig.Poster342BaseURL}${recommendation.poster_path}`} alt={recommendation.title} />\n                    <span className=\"recommendation-title\">{recommendation.title}</span>\n                    <span className=\"recommendation-percentage\">{convertRatingToPercentage(recommendation.vote_average)}</span>\n                  </a>\n                </li>\n              ))}\n            </ul>\n        </div>\n      ) : null\n    ) \n  }\n}","import React from 'react';\nimport { AppConfig } from '../../common/config';\nimport { convertRatingToPercentage, timeConvert } from '../../common/utility';\nimport TMDBCommunication from '../../communications/tmdb_communication';\nimport Cast from '../Cast/Cast';\nimport Keywords from '../Keywords/Keywords';\nimport Media from '../Media/Media';\nimport Overview from '../Overview/Overview';\nimport Recommendations from '../Recommendations/Recommendations';\nimport './MovieDetails.css';\n\nexport default class MovieDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tmdbCommunication = new TMDBCommunication();\n    this.state = {\n      details : {}\n    };\n  }\n\n  componentDidMount() {\n    this.tmdbCommunication.getMovieDetails(this.props.movieId).then(res => {\n      console.log(res)\n      this.setState({\n        details: res\n      })\n    });\n  }\n\n  onError = (e) => {\n    e.target.src = \"//www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg\";\n  }\n\n  render() {\n    const { details } =  this.state;\n    const genres = details.genres ? details.genres.reduce((acc, genre) => acc + \", \" + genre.name, '') : '';\n    const duration = timeConvert(details.runtime)\n    return (\n      <React.Fragment>\n        <div className=\"hero-image-wrapper\">\n          <img className=\"hero-image\" loading=\"lazy\" onError={this.onError} src={`${AppConfig.Poster780BaseURL}${details.poster_path}`} alt={details.title} />\n          <div className=\"shadow\"></div>\n          <div className=\"details-wrapper\">\n            <span className=\"movie-name\">{details.title}</span>\n            <div className=\"details\">{details.release_date} {details.original_language ? `(${details.original_language.toUpperCase()})` : \"\"} | {genres} | {duration}</div>\n          </div>\n          <div className=\"user-score\">{convertRatingToPercentage(details.vote_average)}</div>\n        </div>\n        <Overview  details={details}/>\n        <hr></hr>\n        <Cast movieId={this.props.movieId} />\n        <div className=\"media-keyword-wrapper\">\n          <Media details={details} movieId={this.props.movieId} />\n          <Keywords movieId={this.props.movieId} />\n        </div>\n        <Recommendations movieId={this.props.movieId} />\n      </React.Fragment>\n    );\n  }\n}","import React from 'react';\nimport Home from '../Home/Home';\nimport Header from '../Header/Header';\nimport MovieDetails from '../MovieDetails/MovieDetails';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movieId: \"\",\n    };\n  }\n\n  onMovieClickEvent = (e, movieId) => {\n    e.preventDefault();\n    this.setState({\n      movieId,\n    })\n  }\n\n  render() {\n    const { movieId } = this.state;\n    return(\n      <React.Fragment>\n        <Header/>\n        <div className=\"container\">\n          {movieId ? <MovieDetails key={movieId} movieId={movieId} /> : <Home onMovieClickEvent={this.onMovieClickEvent} /> }\n        </div>\n      </React.Fragment>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}